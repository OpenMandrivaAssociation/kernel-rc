diff -up linux-6.7-rc1/fs/file.c.26~ linux-6.7-rc1/fs/file.c
--- linux-6.7-rc1/fs/file.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/fs/file.c	2023-11-13 02:09:33.429958258 +0100
@@ -819,6 +819,7 @@ struct file *close_fd_get_file(unsigned
 
 	return file;
 }
+EXPORT_SYMBOL_GPL(close_fd_get_file);
 
 void do_close_on_exec(struct files_struct *files)
 {
diff -up linux-6.7-rc1/ipc/msgutil.c.26~ linux-6.7-rc1/ipc/msgutil.c
--- linux-6.7-rc1/ipc/msgutil.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/ipc/msgutil.c	2023-11-13 02:09:33.429958258 +0100
@@ -33,6 +33,7 @@ struct ipc_namespace init_ipc_ns = {
 	.ns.ops = &ipcns_operations,
 #endif
 };
+EXPORT_SYMBOL_GPL(init_ipc_ns);
 
 struct msg_msgseg {
 	struct msg_msgseg *next;
diff -up linux-6.7-rc1/ipc/namespace.c.26~ linux-6.7-rc1/ipc/namespace.c
--- linux-6.7-rc1/ipc/namespace.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/ipc/namespace.c	2023-11-13 02:09:33.429958258 +0100
@@ -205,6 +205,7 @@ void put_ipc_ns(struct ipc_namespace *ns
 			schedule_work(&free_ipc_work);
 	}
 }
+EXPORT_SYMBOL_GPL(put_ipc_ns);
 
 static inline struct ipc_namespace *to_ipc_ns(struct ns_common *ns)
 {
diff -up linux-6.7-rc1/kernel/sched/core.c.26~ linux-6.7-rc1/kernel/sched/core.c
--- linux-6.7-rc1/kernel/sched/core.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/kernel/sched/core.c	2023-11-13 02:09:33.430958266 +0100
@@ -7289,6 +7289,7 @@ int can_nice(const struct task_struct *p
 {
 	return is_nice_reduction(p, nice) || capable(CAP_SYS_NICE);
 }
+EXPORT_SYMBOL_GPL(can_nice);
 
 #ifdef __ARCH_WANT_SYS_NICE
 
diff -up linux-6.7-rc1/kernel/sched/wait.c.26~ linux-6.7-rc1/kernel/sched/wait.c
--- linux-6.7-rc1/kernel/sched/wait.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/kernel/sched/wait.c	2023-11-13 02:09:33.430958266 +0100
@@ -212,6 +212,7 @@ void __wake_up_pollfree(struct wait_queu
 	/* POLLFREE must have cleared the queue. */
 	WARN_ON_ONCE(waitqueue_active(wq_head));
 }
+EXPORT_SYMBOL_GPL(__wake_up_pollfree);
 
 /*
  * Note: we use "set_current_state()" _after_ the wait-queue add,
diff -up linux-6.7-rc1/kernel/signal.c.26~ linux-6.7-rc1/kernel/signal.c
--- linux-6.7-rc1/kernel/signal.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/kernel/signal.c	2023-11-13 02:09:33.430958266 +0100
@@ -1428,6 +1428,7 @@ struct sighand_struct *__lock_task_sigha
 
 	return sighand;
 }
+EXPORT_SYMBOL_GPL(__lock_task_sighand);
 
 #ifdef CONFIG_LOCKDEP
 void lockdep_assert_task_sighand_held(struct task_struct *task)
diff -up linux-6.7-rc1/kernel/task_work.c.26~ linux-6.7-rc1/kernel/task_work.c
--- linux-6.7-rc1/kernel/task_work.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/kernel/task_work.c	2023-11-13 02:09:33.430958266 +0100
@@ -73,6 +73,7 @@ int task_work_add(struct task_struct *ta
 
 	return 0;
 }
+EXPORT_SYMBOL_GPL(task_work_add);
 
 /**
  * task_work_cancel_match - cancel a pending work added by task_work_add()
diff -up linux-6.7-rc1/mm/memory.c.26~ linux-6.7-rc1/mm/memory.c
--- linux-6.7-rc1/mm/memory.c.26~	2023-11-13 02:09:33.431958275 +0100
+++ linux-6.7-rc1/mm/memory.c	2023-11-13 02:10:12.016291208 +0100
@@ -1779,6 +1779,7 @@ void zap_page_range_single(struct vm_are
 	tlb_finish_mmu(&tlb);
 	hugetlb_zap_end(vma, details);
 }
+EXPORT_SYMBOL_GPL(zap_page_range_single);
 
 /**
  * zap_vma_ptes - remove ptes mapping the vma
diff -up linux-6.7-rc1/mm/shmem.c.26~ linux-6.7-rc1/mm/shmem.c
--- linux-6.7-rc1/mm/shmem.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/mm/shmem.c	2023-11-13 02:09:33.431958275 +0100
@@ -4871,6 +4871,7 @@ int shmem_zero_setup(struct vm_area_stru
 
 	return 0;
 }
+EXPORT_SYMBOL_GPL(shmem_zero_setup);
 
 /**
  * shmem_read_folio_gfp - read into page cache, using specified page allocation flags.
diff -up linux-6.7-rc1/mm/vmalloc.c.26~ linux-6.7-rc1/mm/vmalloc.c
--- linux-6.7-rc1/mm/vmalloc.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/mm/vmalloc.c	2023-11-13 02:09:33.431958275 +0100
@@ -2641,6 +2641,7 @@ struct vm_struct *get_vm_area(unsigned l
 				  NUMA_NO_NODE, GFP_KERNEL,
 				  __builtin_return_address(0));
 }
+EXPORT_SYMBOL_GPL(get_vm_area);
 
 struct vm_struct *get_vm_area_caller(unsigned long size, unsigned long flags,
 				const void *caller)
diff -up linux-6.7-rc1/security/security.c.26~ linux-6.7-rc1/security/security.c
--- linux-6.7-rc1/security/security.c.26~	2023-11-13 01:19:07.000000000 +0100
+++ linux-6.7-rc1/security/security.c	2023-11-13 02:09:33.431958275 +0100
@@ -799,6 +799,7 @@ int security_binder_set_context_mgr(cons
 {
 	return call_int_hook(binder_set_context_mgr, 0, mgr);
 }
+EXPORT_SYMBOL_GPL(security_binder_set_context_mgr);
 
 /**
  * security_binder_transaction() - Check if a binder transaction is allowed
@@ -814,6 +815,7 @@ int security_binder_transaction(const st
 {
 	return call_int_hook(binder_transaction, 0, from, to);
 }
+EXPORT_SYMBOL_GPL(security_binder_transaction);
 
 /**
  * security_binder_transfer_binder() - Check if a binder transfer is allowed
@@ -829,6 +831,7 @@ int security_binder_transfer_binder(cons
 {
 	return call_int_hook(binder_transfer_binder, 0, from, to);
 }
+EXPORT_SYMBOL_GPL(security_binder_transfer_binder);
 
 /**
  * security_binder_transfer_file() - Check if a binder file xfer is allowed
@@ -845,6 +848,7 @@ int security_binder_transfer_file(const
 {
 	return call_int_hook(binder_transfer_file, 0, from, to, file);
 }
+EXPORT_SYMBOL_GPL(security_binder_transfer_file);
 
 /**
  * security_ptrace_access_check() - Check if tracing is allowed
