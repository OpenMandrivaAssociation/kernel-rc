diff -up linux-5.19/fs/file.c.29~ linux-5.19/fs/file.c
--- linux-5.19/fs/file.c.29~	2022-09-08 15:55:44.097318572 +0200
+++ linux-5.19/fs/file.c	2022-09-08 15:56:15.849895645 +0200
@@ -813,6 +813,7 @@ struct file *close_fd_get_file(unsigned
 
 	return file;
 }
+EXPORT_SYMBOL_GPL(close_fd_get_file);
 
 void do_close_on_exec(struct files_struct *files)
 {
diff -up linux-5.19/ipc/msgutil.c.29~ linux-5.19/ipc/msgutil.c
--- linux-5.19/ipc/msgutil.c.29~	2022-07-31 23:03:01.000000000 +0200
+++ linux-5.19/ipc/msgutil.c	2022-09-08 15:55:44.097318572 +0200
@@ -33,6 +33,7 @@ struct ipc_namespace init_ipc_ns = {
 	.ns.ops = &ipcns_operations,
 #endif
 };
+EXPORT_SYMBOL_GPL(init_ipc_ns);
 
 struct msg_msgseg {
 	struct msg_msgseg *next;
diff -up linux-5.19/ipc/namespace.c.29~ linux-5.19/ipc/namespace.c
--- linux-5.19/ipc/namespace.c.29~	2022-07-31 23:03:01.000000000 +0200
+++ linux-5.19/ipc/namespace.c	2022-09-08 15:55:44.097318572 +0200
@@ -185,6 +185,7 @@ void put_ipc_ns(struct ipc_namespace *ns
 			schedule_work(&free_ipc_work);
 	}
 }
+EXPORT_SYMBOL_GPL(put_ipc_ns);
 
 static inline struct ipc_namespace *to_ipc_ns(struct ns_common *ns)
 {
diff -up linux-5.19/kernel/fork.c.29~ linux-5.19/kernel/fork.c
--- linux-5.19/kernel/fork.c.29~	2022-07-31 23:03:01.000000000 +0200
+++ linux-5.19/kernel/fork.c	2022-09-08 15:55:44.098318558 +0200
@@ -1225,6 +1225,7 @@ void mmput_async(struct mm_struct *mm)
 		schedule_work(&mm->async_put_work);
 	}
 }
+EXPORT_SYMBOL_GPL(mmput_async);
 #endif
 
 /**
diff -up linux-5.19/kernel/sched/core.c.29~ linux-5.19/kernel/sched/core.c
--- linux-5.19/kernel/sched/core.c.29~	2022-09-08 15:55:44.099318545 +0200
+++ linux-5.19/kernel/sched/core.c	2022-09-08 15:56:40.669564489 +0200
@@ -7036,6 +7036,7 @@ int can_nice(const struct task_struct *p
 {
 	return is_nice_reduction(p, nice) || capable(CAP_SYS_NICE);
 }
+EXPORT_SYMBOL_GPL(can_nice);
 
 #ifdef __ARCH_WANT_SYS_NICE
 
diff -up linux-5.19/kernel/signal.c.29~ linux-5.19/kernel/signal.c
--- linux-5.19/kernel/signal.c.29~	2022-09-08 15:55:44.100318532 +0200
+++ linux-5.19/kernel/signal.c	2022-09-08 15:57:02.379274455 +0200
@@ -1411,6 +1411,7 @@ struct sighand_struct *__lock_task_sigha
 
 	return sighand;
 }
+EXPORT_SYMBOL_GPL(__lock_task_sighand);
 
 #ifdef CONFIG_LOCKDEP
 void lockdep_assert_task_sighand_held(struct task_struct *task)
diff -up linux-5.19/kernel/task_work.c.29~ linux-5.19/kernel/task_work.c
--- linux-5.19/kernel/task_work.c.29~	2022-07-31 23:03:01.000000000 +0200
+++ linux-5.19/kernel/task_work.c	2022-09-08 15:55:44.100318532 +0200
@@ -73,6 +73,7 @@ int task_work_add(struct task_struct *ta
 
 	return 0;
 }
+EXPORT_SYMBOL_GPL(task_work_add);
 
 /**
  * task_work_cancel_match - cancel a pending work added by task_work_add()
diff -up linux-5.19/mm/memory.c.29~ linux-5.19/mm/memory.c
--- linux-5.19/mm/memory.c.29~	2022-07-31 23:03:01.000000000 +0200
+++ linux-5.19/mm/memory.c	2022-09-08 15:55:44.101318518 +0200
@@ -1749,6 +1749,7 @@ void zap_page_range(struct vm_area_struc
 	mmu_notifier_invalidate_range_end(&range);
 	tlb_finish_mmu(&tlb);
 }
+EXPORT_SYMBOL_GPL(zap_page_range);
 
 /**
  * zap_page_range_single - remove user pages in a given range
diff -up linux-5.19/mm/shmem.c.29~ linux-5.19/mm/shmem.c
--- linux-5.19/mm/shmem.c.29~	2022-09-08 15:55:43.804322470 +0200
+++ linux-5.19/mm/shmem.c	2022-09-08 15:55:44.101318518 +0200
@@ -4173,6 +4173,7 @@ int shmem_zero_setup(struct vm_area_stru
 
 	return 0;
 }
+EXPORT_SYMBOL_GPL(shmem_zero_setup);
 
 /**
  * shmem_read_mapping_page_gfp - read into page cache, using specified page allocation flags.
diff -up linux-5.19/mm/vmalloc.c.29~ linux-5.19/mm/vmalloc.c
--- linux-5.19/mm/vmalloc.c.29~	2022-09-08 15:55:43.805322457 +0200
+++ linux-5.19/mm/vmalloc.c	2022-09-08 15:55:44.101318518 +0200
@@ -2499,6 +2499,7 @@ struct vm_struct *get_vm_area(unsigned l
 				  NUMA_NO_NODE, GFP_KERNEL,
 				  __builtin_return_address(0));
 }
+EXPORT_SYMBOL_GPL(get_vm_area);
 
 struct vm_struct *get_vm_area_caller(unsigned long size, unsigned long flags,
 				const void *caller)
diff -up linux-5.19/security/security.c.29~ linux-5.19/security/security.c
--- linux-5.19/security/security.c.29~	2022-09-08 15:55:44.102318505 +0200
+++ linux-5.19/security/security.c	2022-09-08 15:57:59.885504578 +0200
@@ -752,24 +752,28 @@ int security_binder_set_context_mgr(cons
 {
 	return call_int_hook(binder_set_context_mgr, 0, mgr);
 }
+EXPORT_SYMBOL_GPL(security_binder_set_context_mgr);
 
 int security_binder_transaction(const struct cred *from,
 				const struct cred *to)
 {
 	return call_int_hook(binder_transaction, 0, from, to);
 }
+EXPORT_SYMBOL_GPL(security_binder_transaction);
 
 int security_binder_transfer_binder(const struct cred *from,
 				    const struct cred *to)
 {
 	return call_int_hook(binder_transfer_binder, 0, from, to);
 }
+EXPORT_SYMBOL_GPL(security_binder_transfer_binder);
 
 int security_binder_transfer_file(const struct cred *from,
 				  const struct cred *to, struct file *file)
 {
 	return call_int_hook(binder_transfer_file, 0, from, to, file);
 }
+EXPORT_SYMBOL_GPL(security_binder_transfer_file);
 
 int security_ptrace_access_check(struct task_struct *child, unsigned int mode)
 {
