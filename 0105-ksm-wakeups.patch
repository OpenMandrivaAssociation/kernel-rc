diff -up linux-6.16-rc2/kernel/watchdog.c.54~ linux-6.16-rc2/kernel/watchdog.c
--- linux-6.16-rc2/kernel/watchdog.c.54~	2025-06-15 22:49:41.000000000 +0200
+++ linux-6.16-rc2/kernel/watchdog.c	2025-06-18 16:05:12.520085805 +0200
@@ -46,7 +46,7 @@ unsigned long __read_mostly watchdog_ena
 int __read_mostly watchdog_user_enabled = 1;
 static int __read_mostly watchdog_hardlockup_user_enabled = WATCHDOG_HARDLOCKUP_DEFAULT;
 static int __read_mostly watchdog_softlockup_user_enabled = 1;
-int __read_mostly watchdog_thresh = 10;
+int __read_mostly watchdog_thresh = 40;
 static int __read_mostly watchdog_thresh_next;
 static int __read_mostly watchdog_hardlockup_available;
 
diff -up linux-6.16-rc2/mm/ksm.c.54~ linux-6.16-rc2/mm/ksm.c
--- linux-6.16-rc2/mm/ksm.c.54~	2025-06-15 22:49:41.000000000 +0200
+++ linux-6.16-rc2/mm/ksm.c	2025-06-18 16:04:19.857297578 +0200
@@ -2685,9 +2685,14 @@ static int ksm_scan_thread(void *nothing
 
 		if (ksmd_should_run()) {
 			sleep_ms = READ_ONCE(ksm_thread_sleep_millisecs);
-			wait_event_freezable_timeout(ksm_iter_wait,
-				sleep_ms != READ_ONCE(ksm_thread_sleep_millisecs),
-				msecs_to_jiffies(sleep_ms));
+			if (sleep_ms >= 1000)
+				wait_event_freezable_timeout(ksm_iter_wait,
+					sleep_ms != READ_ONCE(ksm_thread_sleep_millisecs),
+					msecs_to_jiffies(round_jiffies_relative(sleep_ms)));
+			else
+				wait_event_freezable_timeout(ksm_iter_wait,
+					sleep_ms != READ_ONCE(ksm_thread_sleep_millisecs),
+					msecs_to_jiffies(sleep_ms));
 		} else {
 			wait_event_freezable(ksm_thread_wait,
 				ksmd_should_run() || kthread_should_stop());
