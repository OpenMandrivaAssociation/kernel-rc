diff -up linux-6.18-rc1/drivers/android/Kconfig.26~ linux-6.18-rc1/drivers/android/Kconfig
--- linux-6.18-rc1/drivers/android/Kconfig.26~	2025-10-12 22:42:36.000000000 +0200
+++ linux-6.18-rc1/drivers/android/Kconfig	2025-10-15 12:20:58.970177753 +0200
@@ -2,7 +2,7 @@
 menu "Android"
 
 config ANDROID_BINDER_IPC
-	bool "Android Binder IPC Driver"
+	tristate "Android Binder IPC Driver"
 	depends on MMU
 	depends on NET
 	default n
diff -up linux-6.18-rc1/drivers/android/Makefile.26~ linux-6.18-rc1/drivers/android/Makefile
--- linux-6.18-rc1/drivers/android/Makefile.26~	2025-10-12 22:42:36.000000000 +0200
+++ linux-6.18-rc1/drivers/android/Makefile	2025-10-15 12:21:50.770099285 +0200
@@ -1,7 +1,8 @@
 # SPDX-License-Identifier: GPL-2.0-only
 ccflags-y += -I$(src)			# needed for trace events
 
-obj-$(CONFIG_ANDROID_BINDERFS)		+= binderfs.o
-obj-$(CONFIG_ANDROID_BINDER_IPC)	+= binder.o binder_alloc.o binder_netlink.o
+obj-$(CONFIG_ANDROID_BINDER_IPC)	+= binder_linux.o
+binder_linux-y				:= binder.o binder_alloc.o binder_netlink.o
+binder_linux-$(CONFIG_ANDROID_BINDERFS)	+= binderfs.o
 obj-$(CONFIG_ANDROID_BINDER_ALLOC_KUNIT_TEST)	+= tests/
 obj-$(CONFIG_ANDROID_BINDER_IPC_RUST)	+= binder/
diff -up linux-6.18-rc1/drivers/android/binder_alloc.c.26~ linux-6.18-rc1/drivers/android/binder_alloc.c
--- linux-6.18-rc1/drivers/android/binder_alloc.c.26~	2025-10-12 22:42:36.000000000 +0200
+++ linux-6.18-rc1/drivers/android/binder_alloc.c	2025-10-15 12:19:26.329236175 +0200
@@ -39,7 +39,7 @@ enum {
 };
 static uint32_t binder_alloc_debug_mask = BINDER_DEBUG_USER_ERROR;
 
-module_param_named(debug_mask, binder_alloc_debug_mask,
+module_param_named(alloc_debug_mask, binder_alloc_debug_mask,
 		   uint, 0644);
 
 #define binder_alloc_debug(mask, x...) \
diff -up linux-6.18-rc1/drivers/staging/android/Kconfig.26~ linux-6.18-rc1/drivers/staging/android/Kconfig
--- linux-6.18-rc1/drivers/staging/android/Kconfig.26~	2025-10-15 12:19:26.316858476 +0200
+++ linux-6.18-rc1/drivers/staging/android/Kconfig	2025-10-15 12:19:26.329354859 +0200
@@ -4,7 +4,7 @@ menu "Android"
 if ANDROID
 
 config ASHMEM
-	bool "Enable the Anonymous Shared Memory Subsystem"
+	tristate "Enable the Anonymous Shared Memory Subsystem"
 	depends on SHMEM
 	help
 	  The ashmem subsystem is a new shared memory allocator, similar to
diff -up linux-6.18-rc1/drivers/staging/android/Makefile.26~ linux-6.18-rc1/drivers/staging/android/Makefile
--- linux-6.18-rc1/drivers/staging/android/Makefile.26~	2025-10-15 12:19:26.316901778 +0200
+++ linux-6.18-rc1/drivers/staging/android/Makefile	2025-10-15 12:19:26.329403702 +0200
@@ -1,4 +1,5 @@
 # SPDX-License-Identifier: GPL-2.0
 ccflags-y += -I$(src)			# needed for trace events
 
-obj-$(CONFIG_ASHMEM)			+= ashmem.o
+obj-$(CONFIG_ASHMEM)			+= ashmem_linux.o
+ashmem_linux-y				+= ashmem.o
diff -up linux-6.18-rc1/drivers/staging/android/ashmem.c.26~ linux-6.18-rc1/drivers/staging/android/ashmem.c
--- linux-6.18-rc1/drivers/staging/android/ashmem.c.26~	2025-10-15 12:19:26.316994964 +0200
+++ linux-6.18-rc1/drivers/staging/android/ashmem.c	2025-10-15 12:19:26.329485086 +0200
@@ -24,6 +24,7 @@
 #include <linux/bitops.h>
 #include <linux/mutex.h>
 #include <linux/shmem_fs.h>
+#include <linux/module.h>
 #include "ashmem.h"
 
 #define ASHMEM_NAME_PREFIX "dev/ashmem/"
@@ -968,3 +969,5 @@ out:
 	return ret;
 }
 device_initcall(ashmem_init);
+
+MODULE_LICENSE("GPL v2");
